import "assembler-new.mm1";

------------------------------------
-- Separation logic preliminaries --
------------------------------------

@_ local def Heap_join (H1 H2 H: set): wff =
$ isfun H1 /\ isfun H2 /\ Dom H1 i^i Dom H2 == 0 /\ H1 u. H2 == H $;

theorem Heap_join_un: $ Heap_join H1 H2 H -> H1 u. H2 == H $ = 'anr;
theorem Heap_join_dmun: $ Heap_join H1 H2 H -> Dom H1 u. Dom H2 == Dom H $ =
'(syl5eqsr dmun @ dmeqd Heap_join_un);
theorem Heap_join_dmin: $ Heap_join H1 H2 H -> Dom H1 i^i Dom H2 == 0 $ = 'anlr;
theorem Heap_join_com: $ Heap_join H1 H2 H <-> Heap_join H2 H1 H $ =
'(aneq (aneq ancomb @ eqseq1 incom) (eqseq1 uncom));
theorem Heap_join_dmdif1: $ Heap_join H1 H2 H -> Dom H i^i Compl (Dom H1) == Dom H2 $ =
'(eqstr3d (ineq1d Heap_join_dmun) @ syl5eqs indir @ syl6eqs un01 @
  uneqd (a1i incpl2) @ sylib eqin1 @ sylib ineq0r Heap_join_dmin);
theorem Heap_join_dmdif2: $ Heap_join H1 H2 H -> Dom H i^i Compl (Dom H2) == Dom H1 $ =
'(sylbi Heap_join_com Heap_join_dmdif1);
theorem Heap_join_ss: $ Heap_join H1 H2 H -> H1 C_ H /\ H2 C_ H $ =
'(anwr @ iand (mpbii ssun1 sseq2) (mpbii ssun2 sseq2));
theorem Heap_join_res2: $ Heap_join H1 H2 H -> H |` Dom H2 == H2 $ =
'(eqstr3d (reseq1d Heap_join_un) @ syl5eqs unres @ syl6eqs un01 @
  uneqd (sylib reseq0 Heap_join_dmin) (a1i resdm));
theorem Heap_join_res1: $ Heap_join H1 H2 H -> H |` Dom H1 == H1 $ =
'(sylbi Heap_join_com Heap_join_res2);
theorem Heap_join_inj1: $ Heap_join H1 H2 H /\ Heap_join H3 H2 H -> H1 = H3 $ =
'(syl axext @ eqstr3d (anwl Heap_join_res1) @
  eqstrd (reseq2d @ eqstr3d (anwl Heap_join_dmdif2) (anwr Heap_join_dmdif2)) @
  anwr Heap_join_res1);
theorem Heap_join_inj2: $ Heap_join H1 H2 H /\ Heap_join H1 H3 H -> H2 = H3 $ =
'(sylbi (aneq Heap_join_com Heap_join_com) Heap_join_inj1);
theorem Heap_join_isf1: $ Heap_join H1 H2 H -> isfun H1 $ = 'an3l;
theorem Heap_join_isf2: $ Heap_join H1 H2 H -> isfun H2 $ = 'anllr;
theorem Heap_join_isf3: $ Heap_join H1 H2 H -> isfun H $ =
'(mpbid (isfeqd anr) @ mpbird (syl unisf anlr) anll);

theorem heap_join_res: $ A u. B == Dom H ->
  (Heap_join (H |` A) (H |` B) H <-> isfun H /\ A i^i B == 0) $ =
(focus (def (f x) '(syl5eqs dmres @ sylib eqin2 @ mpbii ,x @ sseq2d anl))
  '(syl5bbr (bian1a Heap_join_isf3) @ syl aneq2a @ exp @
    bitrd (syl bian2 @ syl5eqsr resun @ sylib eqres @ anwl eqssr) @
    bitrd (syl bian1 @ anwr @ iand resisf resisf) @
    eqseq1d @ ineqd ,(f 'ssun1) ,(f 'ssun2)));

theorem Heap_join_rlam (v: nat x):
  $ Heap_join (\. x e. A, v) (\. x e. B, v) (\. x e. C, v) <->
    A i^i B == 0 /\ A u. B == C $ =
'(aneq (bitr (bian1 @ iani rlamisf rlamisf) @ eqseq1 @ ineq dmrlam dmrlam) unrlam);
theorem Heap_join_rlam2 (v: nat x):
  $ A == a /\ B == b /\ C == c ->
    (Heap_join (\. x e. a, v) (\. x e. b, v) (\. x e. c, v) <->
    A i^i B == 0 /\ A u. B == C) $ =
'(syl5bb Heap_join_rlam @ bicomd @
  aneqd (eqseq1d @ ineqd anll anlr) (eqseqd (uneqd anll anlr) anr));

theorem Heap_join_02: $ Heap_join H 0 H <-> isfun H $ =
'(bitr (bian2 un02) @ bitr (bian2 @ eqstr (ineq2 dm0) in02) @ bian2 isf0);
theorem Heap_join_01: $ Heap_join 0 H H <-> isfun H $ =
'(bitr Heap_join_com Heap_join_02);

@_ local def heap_join (h1 h2: nat): nat =
$ if (isfun h1 /\ isfun h2 /\ Dom h1 i^i Dom h2 == 0) (suc (lower (h1 u. h2))) 0 $;

theorem heap_join_S2: $ heap_join h1 h2 = suc h <->
  isfun h1 /\ isfun h2 /\ Dom h1 i^i Dom h2 == 0 /\ lower (h1 u. h2) = h $ =
'(cases (bitr4d (eqeq1d ifpos) @ syl6bbr peano2 bian1) @
  binthd (syl (con2 sucne0) ifneg) @ con3 anl);

theorem heap_join_n0: $ heap_join h1 h2 != 0 <->
  isfun h1 /\ isfun h2 /\ Dom h1 i^i Dom h2 == 0 $ =
(named '(bitr exsuc @
  bitr (exeqi @ bitr heap_join_S2 @ bitr ancomb @ aneq1i eqcomb) @ exeqe biidd));

theorem heap_join_S: $ heap_join h1 h2 = suc h <-> Heap_join h1 h2 h $ =
'(bitr4 heap_join_S2 @ aneq2i @ eqlower1 @ unfin finns finns);

theorem heap_join_com: $ heap_join h1 h2 = heap_join h2 h1 $ =
'(ifeq (aneq ancomb @ eqseq1 incom) (suceq @ lowereq uncom) eqid);

theorem heap_join_un: $ heap_join h1 h2 = suc h -> h1 u. h2 == h $ =
'(sylbi heap_join_S Heap_join_un);
theorem heap_join_dmun: $ heap_join h1 h2 = suc h -> Dom h1 u. Dom h2 == Dom h $ =
'(syl5eqsr dmun @ dmeqd heap_join_un);
theorem heap_join_dmin: $ heap_join h1 h2 = suc h -> Dom h1 i^i Dom h2 == 0 $ =
'(sylbi heap_join_S Heap_join_dmin);
theorem heap_join_dmdif1: $ heap_join h1 h2 = suc h -> Dom h i^i Compl (Dom h1) == Dom h2 $ =
'(sylbi heap_join_S Heap_join_dmdif1);
theorem heap_join_dmdif2: $ heap_join h1 h2 = suc h -> Dom h i^i Compl (Dom h2) == Dom h1 $ =
'(sylbi heap_join_S Heap_join_dmdif2);
theorem heap_join_ss: $ heap_join h1 h2 = suc h -> h1 C_ h /\ h2 C_ h $ =
'(sylbi heap_join_S Heap_join_ss);
theorem heap_join_res2: $ heap_join h1 h2 = suc h -> h |` Dom h2 == h2 $ =
'(sylbi heap_join_S Heap_join_res2);
theorem heap_join_res1: $ heap_join h1 h2 = suc h -> h |` Dom h1 == h1 $ =
'(sylbi heap_join_S Heap_join_res1);
theorem heap_join_inj1: $ heap_join h1 h2 = suc h /\ heap_join h3 h2 = suc h -> h1 = h3 $ =
'(sylbi (aneq heap_join_S heap_join_S) Heap_join_inj1);
theorem heap_join_inj2: $ heap_join h1 h2 = suc h /\ heap_join h1 h3 = suc h -> h2 = h3 $ =
'(sylbi (aneq heap_join_S heap_join_S) Heap_join_inj2);
theorem heap_join_isf1: $ heap_join h1 h2 = suc h -> isfun h1 $ = '(sylbi heap_join_S Heap_join_isf1);
theorem heap_join_isf2: $ heap_join h1 h2 = suc h -> isfun h2 $ = '(sylbi heap_join_S Heap_join_isf2);
theorem heap_join_isf3: $ heap_join h1 h2 = suc h -> isfun h $ = '(sylbi heap_join_S Heap_join_isf3);
theorem heap_join_02: $ heap_join h 0 = suc h <-> isfun h $ = '(bitr heap_join_S Heap_join_02);
theorem heap_join_01: $ heap_join 0 h = suc h <-> isfun h $ = '(bitr heap_join_S Heap_join_01);

theorem heap_join_rlam (v: nat x):
  $ heap_join (\. x e. A, v) (\. x e. B, v) = suc (\. x e. C, v) <->
    A i^i B == 0 /\ A u. B == C $ =
'(bitr heap_join_S Heap_join_rlam);
theorem heap_join_rlam2 (v: nat x):
  $ A == a /\ B == b /\ C == c ->
    (heap_join (\. x e. a, v) (\. x e. b, v) = suc (\. x e. c, v) <->
    A i^i B == 0 /\ A u. B == C) $ =
'(syl5bb heap_join_rlam @ bicomd @
  aneqd (eqseq1d @ ineqd anll anlr) (eqseqd (uneqd anll anlr) anr));

theorem heap_join_ass:
  $ E. h23 (heap_join h2 h3 = suc h23 /\ heap_join h1 h23 = suc h) <->
    E. h12 (heap_join h1 h2 = suc h12 /\ heap_join h12 h3 = suc h) $ =
(focus
  (def (f x) '(bitr (exeqi @
      bitr (aneq (bitr heap_join_S2 ancomb) heap_join_S) @ bitr anass @ aneq1i eqcomb) @
    exeqe @ sylbir (eqlower2 @ unfin finns finns) ,x))
  '(bitr4
    ,(f '(syl aneq2a @ exp @ syl6bb anass @ aneqd (aneqd
      (syl bian2 @ mpbird (isfeqd anl) @ mpbird (rsyl anrr unisf) anrl)
      (syl6bb uneq0 @ eqseq1d @ syl6eqs indi @ ineq2d @ syl6eqs dmun @ dmeqd anl))
      (anwl @ eqseq1d @ syl6eqsr unass uneq2)))
    ,(f '(syl6bb anlass @ syl6bb (aneq2i @ bitr4 an4 @ aneq anass anass) @
      syl6bb anass @ syl6bb (aneq1i anass) @ syl aneq2a @ exp @
      syl6bb anass @ aneqd (syl6bbr anass @ aneqd
        (syl bian1 @ mpbird (isfeqd anl) @ mpbird (rsyl anrr unisf) anrl)
        (syl6bb ancomb @ syl6bb uneq0 @ eqseq1d @
          syl6eqs indir @ ineq1d @ syl6eqs dmun @ dmeqd anl)) @
      eqseq1d @ uneq1d anl))));

theorem heap_join_ex2: $ E. h2 heap_join h1 h2 = suc h <-> isfun h /\ h1 C_ h $ =
(focus
  '(ibii (eex @ iand heap_join_isf3 @ mpbii ssun1 @ sseq2d @ sylbi heap_join_S anr) _)
  (have 'h '(syl5eqs undi @ syl6eqs inv2 @ ineqd (sylib equn1 anr) @ a1i uncpl2))
  '(sylibr (exeqi heap_join_S) @ syl (iexe @ sylbir (eqlower2 @ infin1 finns) ,eqtac) @
    iand (iand (iand (impcom isfss) @ anwl @ isfss inss1) @
      mpbiri (mpbir ineq0r inss2) (syl dmdisj @ mpbird (isfeqd h) anl)) h));

theorem heap_join_ex1: $ E. h1 heap_join h1 h2 = suc h <-> isfun h /\ h2 C_ h $ =
'(bitr (exeqi @ eqeq1 heap_join_com) heap_join_ex2);

@_ local def oheap_join (oh1 oh2: nat): nat =
$ obind oh1 (\ h1, obind oh2 (\ h2, heap_join h1 h2)) $;

theorem oheap_join_S: $ oheap_join oh1 oh2 = suc h <-> E. h1 (
  oh1 = suc h1 /\ E. h2 (oh2 = suc h2 /\ heap_join h1 h2 = suc h)) $ =
'(bitr obindeqS @ rexeqi @
  bitr (eqeq1 @ applame ,eqtac) @ bitr obindeqS @ rexeqi @
  eqeq1 @ applame ,eqtac);

theorem oheap_join_com: $ oheap_join h1 h2 = oheap_join h2 h1 $ =
(named '(mpbir eqsucext @ ax_gen @ bitr4 oheap_join_S @ bitr4 oheap_join_S @
  bitr rexcomb @ rexeqi @ rexeqi @ eqeq1 heap_join_com));

theorem oheap_join_ass: $ oheap_join h1 (oheap_join h2 h3) = oheap_join (oheap_join h1 h2) h3 $ =
'(mpbir eqsucext @ !! ax_gen h @ bitr4 oheap_join_S @ bitr4 oheap_join_S @
  bitr4 (!! exeqi x1 @ aneq2i @ !! exeqi x23 @ aneq1i @ !! oheap_join_S x2 x3) @
  bitr (!! birexexi x12 _ @ birexan1i @ !! oheap_join_S x1 x2) @ rexeqi @
  bitr4 (birexexi @ bicom rexan2) @ bitr4 (birexexi @ bicom rexan2) @ rexeqi @
  bitr4 rexcomb @ bitr (birexexi @ bicom rexan2) @ rexeqi heap_join_ass);

@_ local def s_lift (p: wff): set = $ {h | isfun h /\ p} $;
prefix s_lift: $^s$ prec 81;
theorem el_s_lift: $ h e. ^s p <-> isfun h /\ p $ = '(elabe ,eqtac);

theorem s_lift_ss: $ ^s p C_ ^s q <-> (p -> q) $ =
'(ibii (rsyl ssel @ sylbi (imeqi el_s_lift el_s_lift) @ syl5 (ian isf0) @ imim2i anr) @
  !! iald h @ sylibr (imeqi el_s_lift el_s_lift) anim2);

@_ local def s_bot: set = $ ^s F. $;
prefix s_bot: $F.s$ prec max;
theorem el_s_bot: $ ~h e. F.s $ = '(mpbi imfal @ sylbi el_s_lift anr);

theorem s_bot_0: $ F.s == 0 $ = '(!! ax_gen h @ binth el_s_bot nel0);
theorem s_bot_ss1: $ F.s C_ P $ = '(mpbir (sseq1 s_bot_0) ss01);
theorem s_bot_ss2: $ P C_ F.s <-> P == F.s $ =
'(bitr4 (sseq2 s_bot_0) @ bitr4 (eqseq2 s_bot_0) ss02);

@_ local def s_emp: set = $ sn 0 $;
prefix s_emp: $emp$ prec max;

theorem el_s_emp: $ h e. emp <-> h = 0 $ = 'elsn;
theorem s_emp_subsn: $ subsn emp $ = 'subsnsn;

@_ local def s_top: set = $ ^s T. $;
prefix s_top: $T.s$ prec max;
theorem el_s_top: $ h e. T.s <-> isfun h $ = '(bitr el_s_lift @ bian2 itru);
theorem s_top_01: $ 0 e. T.s $ = '(mpbir el_s_top isf0);

theorem s_lift_sstop: $ ^s p C_ T.s $ = '(mpbir s_lift_ss @ a1i itru);
theorem s_emp_sstop: $ emp C_ T.s $ = '(mpbir snss s_top_01);
theorem s_sn_sstop: $ sn h C_ T.s <-> isfun h $ = '(bitr snss el_s_top);

theorem el_sstop: $ P C_ T.s -> h e. P -> isfun h $ = '(syl6ib el_s_top ssel);

theorem s_lift_eqtop: $ p <-> ^s p == T.s $ =
'(ibii (sylbir eqtru s_lifteq) @ anrd @ sylib el_s_lift @ mpbiri s_top_01 eleq2);
theorem s_lift_eqbot: $ ~p <-> ^s p == F.s $ =
'(ibii (sylbir eqfal s_lifteq) @ mpbiri el_s_bot @ noteqd @
  syl5bbr (bitr el_s_lift @ bian1 isf0) eleq2);
theorem s_lift_botss: $ ~p -> ^s p C_ P $ =
'(sylbi s_lift_eqbot @ mpbiri s_bot_ss1 sseq1);

theorem heap_join_sstop1: $ heap_join h1 h2 = suc h -> h1 e. T.s $ = '(sylibr el_s_top heap_join_isf1);
theorem heap_join_sstop2: $ heap_join h1 h2 = suc h -> h2 e. T.s $ = '(sylibr el_s_top heap_join_isf2);
theorem heap_join_sstop3: $ heap_join h1 h2 = suc h -> h e. T.s $ = '(sylibr el_s_top heap_join_isf3);

@_ local def s_or (P Q: set): set = $ Union P Q $;
infixl s_or: $\/s$ prec 64;
theorem el_s_or: $ h e. P \/s Q <-> h e. P \/ h e. Q $ = 'elun;

theorem s_orl: $ P C_ P \/s Q $ = 'ssun1;
theorem s_orr: $ Q C_ P \/s Q $ = 'ssun2;
theorem s_eorb: $ P \/s Q C_ R <-> P C_ R /\ Q C_ R $ = 'unss;
theorem s_eor: $ P C_ R -> Q C_ R -> P \/s Q C_ R $ = '(exp @ bi2i s_eorb);
theorem s_bior1a: $ P C_ Q <-> P \/s Q == Q $ = 'equn1;
theorem s_bior2a: $ Q C_ P <-> P \/s Q == P $ = 'equn2;
theorem s_orim1: $ P C_ Q -> P \/s R C_ Q \/s R $ = 'unss1;
theorem s_orim2: $ Q C_ R -> P \/s Q C_ P \/s R $ = 'unss2;
theorem s_orcom: $ P \/s Q == Q \/s P $ = 'uncom;
theorem s_orass: $ (P \/s Q) \/s R == P \/s (Q \/s R) $ = 'unass;

@_ local def s_an (P Q: set): set = $ Inter P Q $;
infixl s_an: $/\s$ prec 70;
theorem el_s_an: $ h e. P /\s Q <-> h e. P /\ h e. Q $ = 'elin;
theorem s_bian1a: $ Q C_ P <-> P /\s Q == Q $ = 'eqin2;
theorem s_bian2a: $ P C_ Q <-> P /\s Q == P $ = 'eqin1;
theorem s_antop: $ P C_ T.s <-> P /\s T.s == P $ = 's_bian2a;
theorem s_anl: $ P /\s Q C_ P $ = 'inss1;
theorem s_anr: $ P /\s Q C_ Q $ = 'inss2;
theorem s_anwl: $ P C_ R -> P /\s Q C_ R $ = '(sstr s_anl);
theorem s_anwr: $ Q C_ R -> P /\s Q C_ R $ = '(sstr s_anr);
theorem s_ian: $ A C_ P /\s Q <-> A C_ P /\ A C_ Q $ = 'ssin;
theorem s_anim1: $ P C_ Q -> P /\s R C_ Q /\s R $ = 'ssin1;
theorem s_anim2: $ Q C_ R -> P /\s Q C_ P /\s R $ = 'ssin2;
theorem s_ancom: $ P /\s Q == Q /\s P $ = 'incom;
theorem s_anass: $ (P /\s Q) /\s R == P /\s (Q /\s R) $ = 'inass;
theorem s_anlass: $ P /\s (Q /\s R) == Q /\s (P /\s R) $ =
'(eqstr3 s_anass @ eqstr (s_aneq1 s_ancom) s_anass);
theorem s_anrass: $ P /\s Q /\s R == P /\s R /\s Q $ =
'(eqstr s_anass @ eqstr4 (s_aneq2 s_ancom) s_anass);
theorem s_antop2: $ P /\s T.s /\s T.s == P /\s T.s $ = '(mpbi s_antop s_anr);
theorem s_andi: $ A /\s (B \/s C) == (A /\s B) \/s (A /\s C) $ = 'indi;
theorem s_andir: $ (A \/s B) /\s C == (A /\s C) \/s (B /\s C) $ = 'indir;
theorem s_ordi: $ A \/s (B /\s C) == (A \/s B) /\s (A \/s C) $ = 'undi;
theorem s_ordir: $ (A /\s B) \/s C == (A \/s C) /\s (B \/s C) $ = 'undir;

theorem el_s_antop: $ h e. P /\s T.s <-> isfun h /\ h e. P $ =
'(bitr el_s_an @ bitr ancomb @ aneq1i el_s_top);
theorem el_s_anlift1: $ P C_ T.s -> (h e. ^s p /\s P <-> p /\ h e. P) $ =
'(syl5bb el_s_an @ syl aneq1a @ syl6 (sylbi el_s_top @ syl5bb el_s_lift bian1) ssel);

theorem s_lift_antop: $ ^s p /\s T.s == ^s p $ = '(mpbi s_antop s_lift_sstop);
theorem s_emp_antop: $ emp /\s T.s == emp $ = '(mpbi s_antop s_emp_sstop);

theorem s_lift_an: $ ^s p /\s ^s q == ^s (p /\ q) $ =
(named '(ax_gen @ bitr4 el_s_an @ bitr el_s_lift @ bitr4 anandi @
  aneq el_s_lift el_s_lift));

theorem s_lift_anidm: $ ^s p /\s ^s p == ^s p $ = '(eqstr s_lift_an @ s_lifteq anidm);

theorem s_anliftass: $ ^s (p /\ q) /\s P == ^s p /\s (^s q /\s P) $ =
'(eqstr3 (s_aneq1 s_lift_an) s_anass);
theorem s_anliftlass: $ ^s p /\s (^s q /\s P) == ^s q /\s (^s p /\s P) $ =
'(eqstr3 s_anliftass @ eqstr (s_aneq1 @ s_lifteq ancomb) s_anliftass);

theorem s_bot_an1: $ F.s /\s P == F.s $ = '(mpbi s_bot_ss2 s_anl);
theorem s_bot_an2: $ P /\s F.s == F.s $ = '(mpbi s_bot_ss2 s_anr);

theorem s_anim2a: $ (p -> P C_ Q) -> ^s p /\s P C_ ^s p /\s Q $ =
(begin (def h '(syl6eqs s_bot_an1 @ sylbi s_lift_eqbot s_aneq1))
  '(casesd (imim2i s_anim2) @ a1i @ syl eqss @ eqstr4d ,h ,h));
theorem s_aneq2a: $ (p -> P == Q) -> ^s p /\s P == ^s p /\s Q $ =
'(ssasymd (syl s_anim2a @ imim2i eqss) (syl s_anim2a @ imim2i eqssr));
theorem s_imp: $ (p -> P C_ Q) -> ^s p /\s P C_ Q $ =
'(syl (mpi s_anr sstr) s_anim2a);

theorem s_bian2_: $ p -> P /\s ^s p == P /\s T.s $ = '(s_aneq2d @ s_lifteqd @ bi2i eqtru);
theorem s_bian1_: $ p -> ^s p /\s P == P /\s T.s $ = '(syl5eqs s_ancom s_bian2_);
theorem s_bian1: $ P C_ T.s -> p -> ^s p /\s P == P $ =
'(exp @ eqstrd (anwr s_bian1_) (sylib s_bian2a anl));
theorem s_bian2: $ P C_ T.s -> p -> P /\s ^s p == P $ = '(syl6ib (eqseq1 s_ancom) s_bian1);
theorem s_exp: $ P C_ T.s -> ^s p /\s P C_ Q -> p -> P C_ Q $ =
'(com23 @ syl6 (bi1d sseq1) s_bian1);

theorem s_bian11i (h: $ a == b /\s c $):
  $ a /\s d == b /\s (c /\s d) $ = '(eqstr (s_aneq1 h) s_anass);
theorem s_bian21i (h: $ a == b /\s c $):
  $ a /\s d == (b /\s d) /\s c $ = '(eqstr (s_aneq1 h) s_anrass);
theorem s_bian12i (h: $ a == b /\s c $):
  $ d /\s a == b /\s (d /\s c) $ = '(eqstr (s_aneq2 h) s_anlass);
theorem s_bian22i (h: $ a == b /\s c $):
  $ d /\s a == (d /\s b) /\s c $ = '(eqstr4 (s_aneq2 h) s_anass);
theorem s_bian11d (h: $ G -> a == b /\s c $):
  $ G -> a /\s d == b /\s (c /\s d) $ = '(syl6eqs s_anass (s_aneq1d h));
theorem s_bian21d (h: $ G -> a == b /\s c $):
  $ G -> a /\s d == (b /\s d) /\s c $ = '(syl6eqs s_anrass (s_aneq1d h));
theorem s_bian12d (h: $ G -> a == b /\s c $):
  $ G -> d /\s a == b /\s (d /\s c) $ = '(syl6eqs s_anlass (s_aneq2d h));
theorem s_bian22d (h: $ G -> a == b /\s c $):
  $ G -> d /\s a == (d /\s b) /\s c $ = '(syl6eqsr s_anass (s_aneq2d h));
theorem s_bian12da (h: $ G /\ d -> a == b /\s c $):
  $ G -> ^s d /\s a == b /\s (^s d /\s c) $ = '(syl6eqs s_anlass (syl s_aneq2a @ exp h));
theorem s_bian22da (h: $ G /\ d -> a == b /\s c $):
  $ G -> ^s d /\s a == (^s d /\s b) /\s c $ = '(syl6eqsr s_anass (syl s_aneq2a @ exp h));

@_ local def s_elift (p: wff): set = $ ^s p /\s emp $;
prefix s_elift: $^e$ prec 81;
theorem el_s_elift: $ h e. ^e p <-> p /\ h = 0 $ =
'(bitr el_s_an @ bitr (aneq1a @
    syl5bb el_s_lift @ syl bian1 @ el_sstop s_emp_sstop) @ aneq2i el_s_emp);
theorem el_s_elift01: $ 0 e. ^e p <-> p $ = '(bitr el_s_elift @ bian2 eqid);

theorem s_elift_ssemp: $ ^e p C_ emp $ = 's_anr;
theorem s_elift_sstop: $ ^e p C_ T.s $ = '(s_anwl s_lift_sstop);
theorem s_elift_subsn: $ subsn (^e p) $ = '(subsnss s_elift_ssemp s_emp_subsn);
theorem s_elift_antop: $ ^e p /\s T.s == ^e p $ = '(mpbi s_antop s_elift_sstop);
theorem s_elift_ss: $ ^e p C_ ^e q <-> (p -> q) $ =
'(ibii (sylib (imeqi el_s_elift01 el_s_elift01) ssel) (sylbir s_lift_ss s_anim1));

theorem s_lift_elift: $ ^s p /\s ^e q == ^e (p /\ q) $ =
(named '(ax_gen @ bitr4 el_s_an @ bitr4 el_s_elift @ bitr4 (aneq el_s_lift el_s_elift) @
  bitr4 anass @ aneq1a @ syl bian1 @ anwr @ mpbiri isf0 @ isfeqd nseq));
theorem s_elift_lift: $ ^e p /\s ^s q == ^e (p /\ q) $ =
'(eqstr s_ancom @ eqstr s_lift_elift @ s_elifteq ancomb);
theorem s_elift_an: $ ^e p /\s ^e q == ^e (p /\ q) $ =
(named '(ax_gen @ bitr4 el_s_an @ bitr el_s_elift @
  bitr4 anandir (aneq el_s_elift el_s_elift)));
theorem s_elift_ss_lift2: $ ^e p C_ ^s q <-> (p -> q) $ =
'(bitr s_bian2a @ bitr (eqseq1 @ eqstr4 s_elift_lift s_elift_an) @ bitr3 s_bian2a s_elift_ss);
theorem s_elift_ss_lift: $ ^e p C_ ^s p $ = '(mpbir s_elift_ss_lift2 id);

theorem s_elift_anidm: $ ^e p /\s ^e p == ^e p $ = '(eqstr s_elift_an @ s_elifteq anidm);

theorem s_elift_top: $ ^e T. == emp $ = '(mpbi s_bian1a s_emp_sstop);
theorem s_elift_bot: $ ^e F. == F.s $ = 's_bot_an1;

theorem s_elift_eqtop: $ p <-> ^e p == emp $ =
'(ibii (sylbir eqtru @ syl6eqs s_elift_top s_elifteq) @
  sylib el_s_elift01 @ sylib snss eqssr);
theorem s_elift_eqbot: $ ~p <-> ^e p == F.s $ =
'(ibii (sylbir eqfal @ syl6eqs s_elift_bot s_elifteq) @
  mpbiri el_s_bot @ noteqd @ syl5bbr el_s_elift01 eleq2);

theorem s_ssemp: $ P C_ emp <-> P == ^e (0 e. P) $ =
(named '(ibii
  (iald @ bicomd @ syl5bb el_s_elift @
    syl5bbr (aneq1a eleq1) @ syl bian2a @ syl6ib el_s_emp ssel)
  (mpbiri s_elift_ssemp sseq1)));

@_ local def s_im (P Q: set): set = $ {h | isfun h /\ (h e. P -> h e. Q)} $;
infixr s_im: $->s$ prec 61;
theorem el_s_im: $ h e. (P ->s Q) <-> isfun h /\ (h e. P -> h e. Q) $ = '(elabe ,eqtac);

@_ local def s_ex {x: nat} (A: set) (P: set x): set = $ {h | E. x (x e. A /\ h e. P)} $;
notation s_ex {x} (A P) = ($E.s$:75) x ($e.$:50) A ($,$:55) P;
theorem el_s_ex (A: set x) (P: set x):
  $ h e. E.s x e. A, P <-> E. x (x e. A /\ h e. P) $ = '(elabe ,eqtac);
theorem el_s_exv (A: set x) (P: set x):
  $ h e. E.s x e. _V, P <-> E. x h e. P $ = '(bitr el_s_ex @ exeqi @ bian1 elv);

theorem s_exeq1 (P: set x): $ A == B -> E.s x e. A, P == E.s x e. B, P $ = '(s_exeq1d id);
theorem s_exeq2a (P Q: set x):
  $ (A. x (x e. A -> P == Q)) -> E.s x e. A, P == E.s x e. A, Q $ =
(named '(abeqd @ syl exeq @ alimi @ syl aneq2a @ imim2i eleq2));
theorem s_exeq2da (P Q: set x) (h: $ G /\ x e. A -> P == Q $):
  $ G -> E.s x e. A, P == E.s x e. A, Q $ =
'(syl s_exeq2a @ ialda h);
theorem s_exeq2ia (P Q: set x) (h: $ x e. A -> P == Q $): $ E.s x e. A, P == E.s x e. A, Q $ =
'(s_exeq2a @ ax_gen h);
theorem s_exeq2i (P Q: set x) (h: $ P == Q $): $ E.s x e. A, P == E.s x e. A, Q $ =
'(s_exeq2ia @ a1i h);
theorem nfs_ex1 (A P: set x) (h1: $ FS/ x A $): $ FS/ x E.s x e. A, P $ = (named '(nfab nfex1));
theorem nfs_ex (A P: set x y)
  (h1: $ FS/ x A $) (h2: $ FS/ x P $): $ FS/ x E.s y e. A, P $ =
(named '(nfab @ nfex @ nfan (nfel2 h1) (nfel2 h2)));
theorem cbvs_exh (P Q: set x y) (h1: $ FS/ y P $) (h2: $ FS/ x Q $)
  (e: $ x = y -> P == Q $): $ E.s x e. A, P == E.s y e. A, Q $ =
(named '(abeqi @ cbvexh (nfan nfv @ nfel2 h1) (nfan nfv @ nfel2 h2) @
  aneqd eleq1 @ eleq2d e));
theorem cbvs_ex (P: set x) (Q: set y) (e: $ x = y -> P == Q $):
  $ E.s x e. A, P == E.s y e. A, Q $ = '(cbvs_exh nfsv nfsv e);
theorem cbvs_exs (P: set x): $ E.s x e. A, P == E.s y e. A, S[y / x] P $ =
'(cbvs_exh nfsv nfsbs1 sbsq);
theorem cbvs_exd (G A) (P: set x) (Q: set y)
  (h: $ G /\ x = y -> P == Q $): $ G -> E.s x e. A, P == E.s y e. A, Q $ =
'(syl5eqs cbvs_exs @ s_exeq2d @ syl sbset @ ialda h);

theorem s_exan1 (Q: set x): $ E.s x e. A, (P /\s Q) == P /\s E.s x e. A, Q $ =
(named '(ax_gen @ bitr4 el_s_ex @ bitr4 el_s_an @
  bitr4 (rexeqi el_s_an) @ bitr4 (aneq2i el_s_ex) rexan1));
theorem s_exan2 (P: set x): $ E.s x e. A, (P /\s Q) == E.s x e. A, P /\s Q $ =
'(eqstr (s_exeq2i s_ancom) @ eqstr s_exan1 s_ancom);
theorem s_excom (P: set x y): $ E.s x e. A, E.s y e. B, P == E.s y e. B, E.s x e. A, P $ =
(named '(ax_gen @ bitr4 el_s_ex @ bitr4 el_s_ex @
  bitr4 (rexeqi el_s_ex) @ bitr4 (rexeqi el_s_ex) rexcomb));

theorem s_bian1exi (a c: set x) (h: $ a == b /\s c $):
  $ E.s x e. A, a == b /\s E.s x e. A, c $ = '(eqstr (s_exeq2i h) s_exan1);
theorem s_bian2exi (a b: set x) (h: $ a == b /\s c $):
  $ E.s x e. A, a == E.s x e. A, b /\s c $ = '(eqstr (s_exeq2i h) s_exan2);
theorem s_bian1exd (a c: set x) (h: $ G -> a == b /\s c $):
  $ G -> E.s x e. A, a == b /\s E.s x e. A, c $ = '(syl6eqs s_exan1 (s_exeq2d h));
theorem s_bian2exd (a b: set x) (h: $ G -> a == b /\s c $):
  $ G -> E.s x e. A, a == E.s x e. A, b /\s c $ = '(syl6eqs s_exan2 (s_exeq2d h));
theorem s_biexexi (a b: set x y) (h: $ a == E.s y e. A, b $):
  $ E.s x e. A, a == E.s y e. A, E.s x e. A, b $ = '(eqstr4 (s_exeq2i h) s_excom);
theorem s_biexan1d (a b: set x) (h: $ G -> a == E.s x e. A, b $):
  $ G -> a /\s c == E.s x e. A, (b /\s c) $ = '(syl6eqsr s_exan2 @ s_aneq1d h);
theorem s_biexan2d (b c: set x) (h: $ G -> b == E.s x e. A, c $):
  $ G -> a /\s b == E.s x e. A, (a /\s c) $ = '(syl6eqsr s_exan1 @ s_aneq2d h);
theorem s_biexan1i (a b: set x) (h: $ a == E.s x e. A, b $):
  $ a /\s c == E.s x e. A, (b /\s c) $ = '(trud @ s_biexan1d @ a1i h);
theorem s_biexan2i (b c: set x) (h: $ b == E.s x e. A, c $):
  $ a /\s b == E.s x e. A, (a /\s c) $ = '(trud @ s_biexan2d @ a1i h);

theorem s_eexb (P: set x): $ A. x (x e. A -> P C_ Q) <-> E.s x e. A, P C_ Q $ =
(named '(bitr4 ralalcomb @ aleqi @ bitr (imeq1i el_s_ex) erexb));
theorem s_eex (P: set x) (h: $ P C_ Q $): $ E.s x e. A, P C_ Q $ =
'(mpbi s_eexb @ ax_gen @ a1i h);
theorem s_iex (Q: set x): $ E. x (x e. A /\ P C_ Q) -> P C_ E.s x e. A, Q $ =
(named '(sylibr (raleqi el_s_ex) rexral));

theorem s_exim (P Q: set x): $ A. x (x e. A -> P C_ Q) -> E.s x e. A, P C_ E.s x e. A, Q $ =
(named '(iald @ sylibr (imeqi el_s_ex el_s_ex) @
  syl exim @ alimi @ syl anim2a @ imim2i ssel));
theorem s_eximi (P Q: set x) (h: $ x e. A -> P C_ Q $): $ E.s x e. A, P C_ E.s x e. A, Q $ =
'(s_exim @ ax_gen h);
theorem s_eximd (P Q: set x) (h: $ G /\ x e. A -> P C_ Q $): $ G -> E.s x e. A, P C_ E.s x e. A, Q $ =
'(syl s_exim @ ialda h);
theorem s_exim1 (P: set x): $ A C_ B -> E.s x e. A, P C_ E.s x e. B, P $ =
(named '(iald @ sylibr (imeqi el_s_ex el_s_ex) @ eximd @ anim1d ssel));

theorem s_ex_anlift1 (p: wff x) (A B P: set x) (h: $ P C_ T.s $):
  $ A. x (x e. A /\ p <-> x e. B) -> E.s x e. A, (^s p /\s P) == E.s x e. B, P $ =
(named '(iald @ bitr4g el_s_ex el_s_ex @ syl exeq @ alimi @
  syl5bb (aneq2i @ el_s_anlift1 h) @ syl5bbr anass @ aneq1d id));
theorem s_exv (A P: set x) (h: $ P C_ T.s $): $ E.s x e. A, P == E.s x e. _V, (^s (x e. A) /\s P) $ =
'(eqscom @ s_ex_anlift1 h @ ax_gen @ bian1 elv);

theorem s_exeqe (B: set x) (e: $ G /\ x = a -> B == C $): $ G -> E.s x e. sn a, B == C $ =
(named '(iald @ syl5bb el_s_ex @ syl5bb (exeqi @ aneq1i elsn) @ exeqed @ eleq2d e));
theorem s_exeqe2 (B: set x) (e: $ G /\ x = a -> B == C $):
  $ G -> E.s x e. A, (^s (x = a) /\s B) == ^s (a e. A) /\s C $ =
'(syl5eqs (s_exv @ s_anwl s_lift_sstop) @
  eqstr3d (s_exeq2da @ a1i @ eqstr (s_aneq1 @ s_lifteq elsn) s_anliftlass) @
  syl5eqsr (s_exv @ s_anwl s_lift_sstop) @ s_exeqe @ s_aneqd (s_lifteqd @ eleq1d anr) e);

theorem s_ex_lift (p: wff x): $ E.s x e. A, ^s p == ^s (E. x (x e. A /\ p)) $ =
(named '(ax_gen @ bitr4 el_s_ex @ bitr4 el_s_lift @ bitr (rexeqi el_s_lift) rexan1));
theorem s_ex_elift (p: wff x): $ E.s x e. A, ^e p == ^e (E. x (x e. A /\ p)) $ =
'(eqstr s_exan2 @ s_aneq1 s_ex_lift);

@_ local def s_al {x: nat} (A: set) (P: set x): set = $ {h | A. x (x e. A -> h e. P)} $;
notation s_al {x} (A P) = ($A.s$:75) x ($e.$:50) A ($,$:55) P;
theorem el_s_al (A: set) (P: set x):
  $ h e. A.s x e. A, P <-> A. x (x e. A -> h e. P) $ = '(elabe ,eqtac);

theorem s_aleq1 (P: set x): $ A == B -> A.s x e. A, P == A.s x e. B, P $ = '(s_aleq1d id);
theorem s_aleq2a (P Q: set x):
  $ A. x (x e. A -> P == Q) -> A.s x e. A, P == A.s x e. A, Q $ =
(named '(abeqd @ syl aleq @ alimi @ syl imeq2a @ imim2i eleq2));
theorem s_aleq2da (P Q: set x) (h: $ G /\ x e. A -> P == Q $):
  $ G -> A.s x e. A, P == A.s x e. A, Q $ =
'(syl s_aleq2a @ ialda h);
theorem nfs_al1 (A P: set x) (h1: $ FS/ x A $): $ FS/ x A.s x e. A, P $ = (named '(nfab nfal1));
theorem nfs_al (A P: set x y)
  (h1: $ FS/ x A $) (h2: $ FS/ x P $): $ FS/ x A.s y e. A, P $ =
(named '(nfab @ nfal @ nfim (nfel2 h1) (nfel2 h2)));
theorem cbvs_alh (P Q: set x y) (h1: $ FS/ y P $) (h2: $ FS/ x Q $)
  (e: $ x = y -> P == Q $): $ A.s x e. A, P == A.s y e. A, Q $ =
(named '(abeqi @ cbvalh (nfim nfv @ nfel2 h1) (nfim nfv @ nfel2 h2) @
  imeqd eleq1 @ eleq2d e));
theorem cbvs_al (P: set x) (Q: set y) (e: $ x = y -> P == Q $):
  $ A.s x e. A, P == A.s y e. A, Q $ = '(cbvs_alh nfsv nfsv e);
theorem cbvs_als (P: set x): $ A.s x e. A, P == A.s y e. A, S[y / x] P $ =
'(cbvs_alh nfsv nfsbs1 sbsq);
theorem cbvs_ald (G A) (P: set x) (Q: set y)
  (h: $ G /\ x = y -> P == Q $): $ G -> A.s x e. A, P == A.s y e. A, Q $ =
'(syl5eqs cbvs_als @ s_aleq2d @ syl sbset @ ialda h);

@_ local def s_sep (P Q: set): set =
$ {h | E. h1 E. h2 (h1 e. P /\ h2 e. Q /\ heap_join h1 h2 = suc h)} $;
infixl s_sep: $*s$ prec 72;

theorem el_s_sep: $ h e. P *s Q <->
  E. h1 E. h2 (h1 e. P /\ h2 e. Q /\ heap_join h1 h2 = suc h) $ =
'(elabe ,eqtac);

theorem el_s_sep2: $ h e. P *s Q <->
  E. h1 (h1 e. P /\ E. h2 (h2 e. Q /\ heap_join h1 h2 = suc h)) $ =
'(bitr el_s_sep @ exeqi @ bitr (exeqi anass) exan1);

theorem el_s_sep_sn1: $ h e. sn h1 *s Q <->
  E. h2 (h2 e. Q /\ heap_join h1 h2 = suc h) $ =
'(bitr el_s_sep2 @ bitr (exeqi @ aneq1i elsn) @ exeqe ,eqtac);
theorem el_s_sep_sn2: $ h e. P *s sn h2 <->
  E. h1 (h1 e. P /\ heap_join h1 h2 = suc h) $ =
'(bitr el_s_sep2 @ rexeqi @ bitr (exeqi @ aneq1i elsn) @ exeqe ,eqtac);
theorem el_s_sep_sn: $ h e. sn h1 *s sn h2 <-> heap_join h1 h2 = suc h $ =
'(bitr el_s_sep_sn1 @ bitr (exeqi @ aneq1i elsn) @ exeqe ,eqtac);
theorem s_sep_sn: $ (sn h1 *s sn h2) == sn h <-> heap_join h1 h2 = suc h $ =
(named '(ibii (sylib el_s_sep_sn @ mpbiri snid eleq2) @
  eqrd @ bitr4g el_s_sep_sn elsn @ syl6bb peano2 @ syl6bb eqcomb eqeq1));

theorem s_sepcom: $ P *s Q == Q *s P $ =
(named '(ax_gen @ bitr4 el_s_sep @ bitr4 el_s_sep @ bitr excomb @
  exeqi @ exeqi @ aneq ancomb @ eqeq1 heap_join_com));

theorem s_sepass: $ (P *s Q) *s R == P *s (Q *s R) $ =
(named '(ax_gen @ bitr4 el_s_sep2 @ bitr4 el_s_sep2 @
  bitr4 (bitr4 (exeqi @ bitr4 (aneq1i el_s_sep2) rexan2) rexexcomb) @
  rexeqi @ bitr4 (bitr4 (exeqi @ bitr4 (aneq1i el_s_sep2) rexan2) rexexcomb) @
  bitr4 (bitr2 rexexcomb (exeqi rexan2)) @ rexeqi @
  bitr4 (bitr2 rexexcomb (exeqi rexan2)) @ bitr4 rexcomb @
  rexeqi heap_join_ass));

theorem s_seplass: $ a *s (b *s c) == b *s (a *s c) $ =
'(eqstr3 s_sepass @ eqstr (s_sepeq1 s_sepcom) s_sepass);
theorem s_seprass: $ a *s b *s c == a *s c *s b $ =
'(eqstr s_sepass @ eqstr4 (s_sepeq2 s_sepcom) s_sepass);
theorem s_sep4: $ (a *s b) *s (c *s d) == (a *s c) *s (b *s d) $ =
'(eqstr4 s_sepass @ eqstr4 s_sepass @ s_sepeq2 s_seplass);

theorem s_bisep11i (h: $ a == b *s c $): $ a *s d == b *s (c *s d) $ = '(eqstr (s_sepeq1 h) s_sepass);
theorem s_bisep21i (h: $ a == b *s c $): $ a *s d == (b *s d) *s c $ = '(eqstr (s_sepeq1 h) s_seprass);
theorem s_bisep12i (h: $ a == b *s c $): $ d *s a == b *s (d *s c) $ = '(eqstr (s_sepeq2 h) s_seplass);
theorem s_bisep22i (h: $ a == b *s c $): $ d *s a == (d *s b) *s c $ = '(eqstr4 (s_sepeq2 h) s_sepass);
theorem s_bisep11d (h: $ G -> a == b *s c $): $ G -> a *s d == b *s (c *s d) $ = '(syl6eqs s_sepass (s_sepeq1d h));
theorem s_bisep21d (h: $ G -> a == b *s c $): $ G -> a *s d == (b *s d) *s c $ = '(syl6eqs s_seprass (s_sepeq1d h));
theorem s_bisep12d (h: $ G -> a == b *s c $): $ G -> d *s a == b *s (d *s c) $ = '(syl6eqs s_seplass (s_sepeq2d h));
theorem s_bisep22d (h: $ G -> a == b *s c $): $ G -> d *s a == (d *s b) *s c $ = '(syl6eqsr s_sepass (s_sepeq2d h));

theorem s_sep_sstop: $ P *s Q C_ T.s $ =
(named '(ax_gen @ sylbi el_s_sep @ eex @ eex @ anwr heap_join_sstop3));
theorem s_sep_antop1: $ (P /\s T.s) *s Q == P *s Q $ =
(named '(eqri @ bitr4 el_s_sep @ bitr4 el_s_sep @ exeqi @ exeqi @
  aneq1a @ aneq1d @ syl5bb el_s_an @ syl bian2 @ heap_join_sstop1));
theorem s_sep_antop2: $ P *s (Q /\s T.s) == P *s Q $ =
'(eqstr4 s_sepcom @ eqstr4 s_sepcom s_sep_antop1);

theorem s_sepim1: $ P C_ Q -> P *s R C_ Q *s R $ =
(named '(sylib ssab @ iald @ eximd @ eximd @ anim1d @ anim1d ssel));
theorem s_sepim2: $ Q C_ R -> P *s Q C_ P *s R $ =
'(sylib (sseq s_sepcom s_sepcom) s_sepim1);
theorem s_sepim: $ P1 C_ P2 -> Q1 C_ Q2 -> P1 *s Q1 C_ P2 *s Q2 $ =
'(rsyl s_sepim1 @ syl5 s_sepim2 sstr);

theorem s_sep_subsn: $ subsn P -> subsn Q -> subsn (P *s Q) $ =
(named '(sylbi subsnsssn @ eex @ syl5bi subsnsssn @ eexda @
  syl (mpi subsnsn subsnss) @
  sylc sstr (anwl s_sepim1) @ sylc sstr (anwr s_sepim2) @
  a1i @ ax_gen @ sylbi el_s_sep_sn @ sylibr elsn @
  sylib (eqlower2 @ unfin finns finns) @ eqscomd heap_join_un));

theorem s_sep_emp2a: $ P *s emp == P /\s T.s $ =
(named @ focus
  '(eqri @ bitr el_s_sep2 @ bitr3 (exeqi _) (exeqe eleq1))
  '(bitr (aneq2i @ bitr el_s_antop ancomb) @ bitr4 anlass @ aneq2i @
    bitr (exeqi @ aneq1i elsn) @ bitr (exeqe @ eqeq1d heap_joineq2) @
    bitr3 (bian2a heap_join_isf1) @ aneq1a @
    syl6bb peano2 @ sylbir heap_join_02 eqeq1));
theorem s_sep_emp1a: $ emp *s P == P /\s T.s $ = '(eqstr s_sepcom s_sep_emp2a);
theorem s_sep_emp2: $ P C_ T.s <-> P *s emp == P $ =
'(bitr4 s_antop @ eqseq1 s_sep_emp2a);
theorem s_sep_emp1: $ P C_ T.s <-> emp *s P == P $ =
'(bitr s_sep_emp2 @ eqseq1 s_sepcom);

theorem s_lift_sep: $ ^s p *s ^s q == ^s (p /\ q) $ =
(named '(ax_gen @ bitr4 el_s_sep @ bitr4 el_s_lift @
  bitr (exeqi @ bitr (exeqi @ bitr4 (aneq1i @
    bitr (aneq el_s_lift el_s_lift) an4) anrass) exan2) @
  bitr exan2 @ aneq1i @ bitr4 (exeqi @ exeqi @ bian1a @ iand heap_join_isf1 heap_join_isf2) @
  ibii (iexde @ iexde @ mpbird ,eqtac @ sylibr heap_join_02 anll) @
  eex @ eex heap_join_isf3));

theorem s_lift_sep1: $ ^s p /\s P C_ ^s p *s P $ =
(named @ focus
  (have 'h '(sylib el_s_lift an3l))
  '(ax_gen @ sylbi el_s_an @ sylibr el_s_sep @ iexde @ iexde @ mpbird ,eqtac @
    iand (iand (sylibr el_s_lift @ syl (ian isf0) @ anrd h) anllr) @
    sylibr heap_join_01 @ anld h));
theorem s_lift_sep2: $ P /\s ^s p C_ P *s ^s p $ =
'(mpbi (sseq s_ancom s_sepcom) s_lift_sep1);

theorem s_ssseptop: $ P /\s T.s C_ P *s T.s $ = 's_lift_sep2;

theorem s_lift_sepidm: $ ^s p *s ^s p == ^s p $ = '(eqstr s_lift_sep @ s_lifteq anidm);
theorem s_top_sepidm: $ T.s *s T.s == T.s $ = 's_lift_sepidm;
theorem s_septop2: $ A *s T.s *s T.s == A *s T.s $ = '(eqstr s_sepass @ s_sepeq2 s_top_sepidm);
theorem s_lift_septop: $ ^s p *s T.s == ^s p $ = '(eqstr s_lift_sep @ s_lifteq @ bian2 itru);

theorem s_bot_sep1: $ F.s *s P == F.s $ =
(named '(ax_gen @ binth (mtbir el_s_sep @ nexi @ nexi @ mt anll el_s_bot) el_s_bot));
theorem s_bot_sep2: $ P *s F.s == F.s $ = '(eqstr s_sepcom s_bot_sep1);

theorem s_ansepdi: $ (P /\s Q) *s R C_ (P *s R) /\s (Q *s R) $ =
'(mpbir s_ian @ ian (s_sepim1 s_anl) (s_sepim1 s_anr));
theorem s_orsepdi: $ (P \/s Q) *s R == (P *s R) \/s (Q *s R) $ =
(named '(ax_gen @ bitr el_s_sep2 @ bitr (exeqi @ bitr (aneq1i el_s_or) andir) @
  bitr4 exor @ bitr el_s_or @ oreq el_s_sep2 el_s_sep2));
theorem s_orsepdir: $ P *s (Q \/s R) == (P *s Q) \/s (P *s R) $ =
'(eqstr s_sepcom @ eqstr s_orsepdi @ s_oreq s_sepcom s_sepcom);

theorem s_sep_anlift1: $ (^s p /\s P) *s Q == ^s p /\s (P *s Q) $ =
(named '(ax_gen @ bitr el_s_sep2 @
  bitr (exeqi @ bitr (aneq1a @ syl5bb el_s_an @ aneq1d @
    syl5bb el_s_lift @ syl bian1 @ eex @ anwr @ heap_join_isf1) anass) @
  bitr4 exan1 @ bitr el_s_an @
  bitr (aneq1a @ syl5bb el_s_lift @ syl bian1 @ el_sstop s_sep_sstop) @
  aneq2i el_s_sep2));

theorem s_sep_anlift2: $ P *s (^s p /\s Q) == ^s p /\s (P *s Q) $ =
'(eqstr s_sepcom @ eqstr s_sep_anlift1 @ s_aneq2 s_sepcom);

theorem s_sep_anlift: $ (^s p /\s P) *s (^s q /\s Q) == ^s (p /\ q) /\s (P *s Q) $ =
'(eqstr4 s_sep_anlift1 @ eqstr3 (s_aneq1 s_lift_an) @
  eqstr4 s_anass @ s_aneq2 s_sep_anlift2);

theorem s_sepssl: $ P C_ ^s p -> P *s Q C_ ^s p $ =
'(sylibr s_bian1a @ syl5eqsr s_sep_anlift1 @ sylbi s_bian1a s_sepeq1);
theorem s_sepssr: $ Q C_ ^s p -> P *s Q C_ ^s p $ =
'(sylibr s_bian1a @ syl5eqsr s_sep_anlift2 @ sylbi s_bian1a s_sepeq2);

theorem s_bian1sep1i (h: $ a == ^s b /\s c $):
  $ a *s d == ^s b /\s (c *s d) $ = '(eqstr (s_sepeq1 h) s_sep_anlift1);
theorem s_bian1sep2i (h: $ a == ^s b /\s c $):
  $ d *s a == ^s b /\s (d *s c) $ = '(eqstr (s_sepeq2 h) s_sep_anlift2);
theorem s_bian1sep1d (h: $ G -> a == ^s b /\s c $):
  $ G -> a *s d == ^s b /\s (c *s d) $ = '(syl6eqs s_sep_anlift1 (s_sepeq1d h));
theorem s_bian1sep2d (h: $ G -> a == ^s b /\s c $):
  $ G -> d *s a == ^s b /\s (d *s c) $ = '(syl6eqs s_sep_anlift2 (s_sepeq2d h));
theorem s_bisep1an1i (h: $ a == b *s c $):
  $ ^s d /\s a == b *s (^s d /\s c) $ = '(eqstr4 (s_aneq2 h) s_sep_anlift2);
theorem s_bisep2an1i (h: $ a == b *s c $):
  $ ^s d /\s a == (^s d /\s b) *s c $ = '(eqstr4 (s_aneq2 h) s_sep_anlift1);
theorem s_bisep1an1d (h: $ G -> a == b *s c $):
  $ G -> ^s d /\s a == b *s (^s d /\s c) $ = '(syl6eqsr s_sep_anlift2 (s_aneq2d h));
theorem s_bisep2an1d (h: $ G -> a == b *s c $):
  $ G -> ^s d /\s a == (^s d /\s b) *s c $ = '(syl6eqsr s_sep_anlift1 (s_aneq2d h));

theorem s_elift_sep: $ ^e p *s P == ^s p /\s P $ =
'(eqstr s_sep_anlift1 @ eqstr (s_aneq2 @ eqstr s_sep_emp1a s_ancom) @
  eqstr3 s_anass @ s_aneq1 s_lift_antop);
theorem s_sep_elift: $ P *s ^e p == ^s p /\s P $ =
'(eqstr s_sepcom s_elift_sep);

theorem s_elift_septop: $ ^e p *s T.s == ^s p $ = '(eqstr s_elift_sep @ s_lift_antop);

theorem s_bisep1: $ P C_ T.s -> p -> ^e p *s P == P $ = '(syl6ibr (eqseq1 s_elift_sep) s_bian1);
theorem s_bisep2: $ P C_ T.s -> p -> P *s ^e p == P $ = '(syl6ibr (eqseq1 s_sep_elift) s_bian1);

theorem s_exsep1 (Q: set x): $ E.s x e. A, (P *s Q) == P *s E.s x e. A, Q $ =
(named '(ax_gen @ bitr4 el_s_ex @ bitr4 el_s_sep2 @
  bitr4 (rexeqi el_s_sep2) @ birexrexi @ birexexi @ birexan1i el_s_ex));
theorem s_exsep2 (P: set x): $ E.s x e. A, (P *s Q) == E.s x e. A, P *s Q $ =
'(eqstr (s_exeq2i s_sepcom) @ eqstr s_exsep1 s_sepcom);

theorem s_bisep1exi (a c: set x) (h: $ a == b *s c $):
  $ E.s x e. A, a == b *s E.s x e. A, c $ = '(eqstr (s_exeq2i h) s_exsep1);
theorem s_bisep2exi (a b: set x) (h: $ a == b *s c $):
  $ E.s x e. A, a == E.s x e. A, b *s c $ = '(eqstr (s_exeq2i h) s_exsep2);
theorem s_bisep1exd (a c: set x) (h: $ G -> a == b *s c $):
  $ G -> E.s x e. A, a == b *s E.s x e. A, c $ = '(syl6eqs s_exsep1 (s_exeq2d h));
theorem s_bisep2exd (a b: set x) (h: $ G -> a == b *s c $):
  $ G -> E.s x e. A, a == E.s x e. A, b *s c $ = '(syl6eqs s_exsep2 (s_exeq2d h));
theorem s_biexsep1d (a b: set x) (h: $ G -> a == E.s x e. A, b $):
  $ G -> a *s c == E.s x e. A, (b *s c) $ = '(syl6eqsr s_exsep2 @ s_sepeq1d h);
theorem s_biexsep2d (b c: set x) (h: $ G -> b == E.s x e. A, c $):
  $ G -> a *s b == E.s x e. A, (a *s c) $ = '(syl6eqsr s_exsep1 @ s_sepeq2d h);
theorem s_biexsep1i (a b: set x) (h: $ a == E.s x e. A, b $):
  $ a *s c == E.s x e. A, (b *s c) $ = '(trud @ s_biexsep1d @ a1i h);
theorem s_biexsep2i (b c: set x) (h: $ b == E.s x e. A, c $):
  $ a *s b == E.s x e. A, (a *s c) $ = '(trud @ s_biexsep2d @ a1i h);

@_ local def s_wand (P Q: set): set =
$ {h1 | isfun h1 /\ A. h2 A. h (h2 e. P -> heap_join h1 h2 = suc h -> h e. Q)} $;
infixr s_wand: $-*s$ prec 61;
theorem el_s_wand: $ h1 e. P -*s Q <-> isfun h1 /\
  A. h2 A. h (h2 e. P -> heap_join h1 h2 = suc h -> h e. Q) $ =
'(elabe ,eqtac);

theorem s_wand_sstop: $ P -*s Q C_ T.s $ =
(named '(ax_gen @ sylbi el_s_wand @ sylibr el_s_top anl));

theorem s_wand_I: $ h1 e. P -*s Q -> h2 e. P -> heap_join h1 h2 = suc h -> h e. Q $ =
'(sylbi el_s_wand @ anwr @ ealie @ ealde @ bi1d ,eqtac);
theorem s_wand_Ir: $ h2 e. P -*s Q -> h1 e. P -> heap_join h1 h2 = suc h -> h e. Q $ =
'(syl6ib (imeq1i @ eqeq1 heap_join_com) s_wand_I);

theorem ss_s_wand_g: $ A C_ P -*s Q <-> A C_ T.s /\ A *s P C_ Q $ =
(named '(bitr (aleqi @ bitr (imeq2i el_s_wand) imandi) @ bitr4 alan @
  aneq (aleqi @ imeq2i el_s_top) @
  bitr4 (aleqi @ bitr (imeq1i el_s_sep2) @ bitr erexb @ aleqi @ imeq2i erexb) @
  bitr (aleqi @ imeq2i alcomb) ralalcomb));

theorem s_wand_imp: $ A C_ P -*s Q -> A *s P C_ Q $ = '(sylbi ss_s_wand_g anr);

theorem ss_s_wand: $ A C_ T.s -> (A C_ P -*s Q <-> A *s P C_ Q) $ =
'(syl5bb ss_s_wand_g bian1);
theorem ss_s_wand2: $ A C_ T.s -> (A C_ P -*s Q <-> P *s A C_ Q) $ =
'(syl6bb (sseq1 s_sepcom) ss_s_wand);

theorem s_wand_mp: $ (P -*s Q) *s P C_ Q $ = '(anri @ mpbi ss_s_wand_g ssid);
theorem s_wand_mpr: $ P *s (P -*s Q) C_ Q $ = '(mpbi (sseq1 s_sepcom) s_wand_mp);

theorem s_wand_ss1: $ P C_ Q -> Q -*s R C_ P -*s R $ =
'(sylibr ss_s_wand_g @ iand (a1i s_wand_sstop) @ syl (mpi s_wand_mp sstr) s_sepim2);
theorem s_wand_ss2: $ Q C_ R -> P -*s Q C_ P -*s R $ =
'(sylibr ss_s_wand_g @ iand (a1i s_wand_sstop) @ sstr s_wand_mp);

theorem s_split: $ subsn Q -> (Q *s T.s) /\s P C_ Q *s (Q -*s P) $ =
(named @ focus
  '(iald @ syl5bi el_s_an @ impd @ com23 @ exp @ syl5bi el_s_sep @ syl6ibr el_s_sep @
    eximd @ eximd @ syl anim1a @ exp @ syl anim2a @ exp @ a1d @
    sylibr el_s_wand @ iand (rsyl anlr heap_join_isf2) @
    iald @ ialda @ exp @ mpbird _ an4lr)
  '(eleq1d @ sylib peano2 @ eqtr3d anr @ syl5eq heap_join_com @
    eqtrd (heap_joineq1d @ subsni an5l anlr anllr) an3lr));

@_ local def s_Sep {x: nat} (A: set) (P: set x): set =
$ {h | isfun h /\ E. f (func f (Dom h) A /\
  A. x (x e. A -> lower (h |` {z | f @ z = x}) e. P))} $;
notation s_Sep {x} (A P) = ($|*|s$:75) x ($e.$:50) A ($,$:55) P;
theorem el_s_Sep (A: set) (P: set x): $ h e. |*|s x e. A, P <->
  isfun h /\ E. f (func f (Dom h) A /\
    A. x (x e. A -> lower (h |` {z | f @ z = x}) e. P)) $ = '(elabe ,eqtac);

theorem s_Sepeq1 (P: set x): $ A == B -> |*|s x e. A, P == |*|s x e. B, P $ =
'(s_Sepeq1d id);
theorem s_Sepeq2a (P Q: set x):
  $ A. x (x e. A -> P == Q) -> |*|s x e. A, P == |*|s x e. A, Q $ =
(named '(abeqd @ aneq2d @ rexeqd @
  syl aleq @ alimi @ syl imeq2a @ imim2i eleq2));
theorem s_Sepeq2da (P Q: set x) (h: $ G /\ x e. A -> P == Q $):
  $ G -> |*|s x e. A, P == |*|s x e. A, Q $ =
'(syl s_Sepeq2a @ ialda h);
theorem nfs_Sep1 (A P: set x) (h1: $ FS/ x A $): $ FS/ x |*|s x e. A, P $ =
(named '(nfab @ nfan nfv @ nfex @ nfan (nffunc nfsv nfsv h1) nfal1));
theorem nfs_Sep (A P: set x y)
  (h1: $ FS/ x A $) (h2: $ FS/ x P $): $ FS/ x |*|s y e. A, P $ =
(named '(nfab @ nfan nfv @ nfex @ nfan (nffunc nfsv nfsv h1) @
  nfal @ nfim (nfel2 h1) @ nfel2 h2));
theorem cbvs_Seph (P Q: set x y) (h1: $ FS/ y P $) (h2: $ FS/ x Q $)
  (e: $ x = y -> P == Q $): $ |*|s x e. A, P == |*|s y e. A, Q $ =
(named '(abeqi @ aneq2i @ rexeqi @
  cbvalh (nfim nfv @ nfel2 h1) (nfim nfv @ nfel2 h2) @
  imeqd eleq1 @ eleqd ,eqtac e));
theorem cbvs_Sep (P: set x) (Q: set y) (e: $ x = y -> P == Q $):
  $ |*|s x e. A, P == |*|s y e. A, Q $ = '(cbvs_Seph nfsv nfsv e);
theorem cbvs_Seps (P: set x): $ |*|s x e. A, P == |*|s y e. A, S[y / x] P $ =
'(cbvs_Seph nfsv nfsbs1 sbsq);
theorem cbvs_Sepd (G A) (P: set x) (Q: set y)
  (h: $ G /\ x = y -> P == Q  $): $ G -> |*|s x e. A, P == |*|s y e. A, Q $ =
'(syl5eqs cbvs_Seps @ s_Sepeq2d @ syl sbset @ ialda h);

theorem s_Sep_sstop (A P: set x): $ |*|s x e. A, P C_ T.s $ =
(named '(mpbi ssab1 @ ax_gen @ sylibr el_s_top anl));
theorem s_Sep_antop (A P: set x): $ |*|s x e. A, (P /\s T.s) == |*|s x e. A, P $ =
(named '(abeqi @ aneq2a @ rexeqd @ aleqd @ imeq2d @ syl5bb el_s_antop @
  syl bian1 @ sylib (isfeq @ mpbi eqlower @ resfin finns) resisf));

theorem s_Sep_0 (P: set x): $ |*|s x e. 0, P == emp $ =
(named @ focus
  '(ax_gen @ bitr4 el_s_Sep @ bitr4 elsn @ bitr _ @
    bitr (bian1a @ mpbiri isf0 isfeq) nsinj)
  '(aneq2i @ bitr (exeqi _) @ exeqe biidd)
  '(bitr (bian2 @ ax_gen @ absurd el02) @ bitr func03 @ aneq nsinj dmeq0));

theorem s_Sep_sn_sb (P: set x): $ |*|s x e. sn a, P == S[a / x] P /\s T.s $ =
(named '(ax_gen @ bitr4 el_s_Sep @ bitr4 el_s_antop @ aneq2a @
  syl5bb (exeqi @ aneq1i @
    bitr (funceq2 @ mpbi eqlower @ dmfin finns) @ bitr funcsn2 nsinj) @
  syl5bb (exeqe ,eqtac) @ syl5bb (aleqi @ imeq1i elsn) @
  syl6bbr elsbs @ syl6bbr dfsb2 @ aleqd @ syl imeq2a @ exp @ eleq1d @
  sylib (eqlower1 @ resfin finns) @ sylib eqres @
  sylib ssab2 @ ialda @ apprlamed (eqcomd anllr) @
  sylibr (ellower @ dmfin finns) anr));

theorem s_Sep_sn (P: set x)
  (e: $ G /\ x = a -> P == Q $) (h: $ G -> Q C_ T.s $): $ G -> |*|s x e. sn a, P == Q $ =
'(syl5eqs s_Sep_sn_sb @ eqstrd (s_aneq1d @ sbsed e) @ sylib s_antop h);

theorem s_Sep_un_lem1: $ isfun F -> Ran (F |` Dom (F i^i Xp _V A)) C_ A $ =
(named '(sylibr ssrn @ ssrd2 @ syl5bi prelres @ exp @
  mpd (sylib eldm anrr) @ eexd @ syl5bi elin @ exp @
  mpbird (eleq1d @ preq2d @ isfd anll (anwl anrl) anrl) @ anrr));

theorem s_Sep_un_lem2 (h1: $ C C_ A u. B $)
  (h2: $ G -> func K (Dom H) (A u. B) $):
  $ G -> func (K i^i Xp _V C) (Dom (H |` Dom (K i^i Xp _V C))) C $ =
'(iand (iand (syl (isfss inss1) @ syl funcisf h2) @
    eqscomd @ syl5eqs dmres @ sylib eqin2 @
    mpbii (dmss inss1) @ sseq2d @ syl funcdm h2) @
  a1i @ mpbir ssrn inss2);

theorem s_Sep_un_lem3 (h1: $ C C_ A u. B $)
  (h2: $ G -> func K (Dom H) (A u. B) $)
  (h3: $ G -> x e. C $):
  $ G -> H |` Dom (K i^i Xp _V C) |` {y | (K i^i Xp _V C) @ y = x} ==
         H |` {y | K @ y = x} $ =
(named '(eqrd2 @ bitr4g prelres prelres @
  bitr4g (aneq prelres @ elabe ,eqtac) (aneq2i @ elabe ,eqtac) @
  syl5bb anass @ syl aneq2a @ exp @
  bitr3d (anwl @ syl isfappb @ syl (isfss inss1) @ syl funcisf h2) @
  syl5bb elin @ bitrd (syl bian2 @ sylibr prelxp @ syl (ian elv) @ anwl h3) @
  bitrd (anwl @ syl funcappb h2) @ anwr @ rsyl preldm bian1));

theorem s_Sep_un_lem4 {p z}
  (h1: $ G -> func F (Dom H) A $)
  (h2: $ G -> func F1 (Dom H1) A1 $)
  (h3: $ G -> (p, z e. H /\ p, x e. F <-> p, z e. H1 /\ p, x e. F1) $):
  $ G -> H |` {y | F @ y = x} == H1 |` {y | F1 @ y = x} $ =
(focus
  '(eqrd2 @ bitr4g prelres prelres @
    bitr4g (aneq2i @ elabe ,eqtac) (aneq2i @ elabe ,eqtac) _)
  (def (f x) '(syl aneq2a @ exp @
    bitrd (syl funcappb @ anwl ,x) @ anwr @ syl bian1 preldm))
  '(bitr3d ,(f 'h1) @ bitrd h3 ,(f 'h2)));

theorem s_Sep_un (P: set x): $ A i^i B == 0 ->
  |*|s x e. A u. B, P == |*|s x e. A, P *s |*|s x e. B, P $ =
(focus
  '(!! iald a @ bitr4g el_s_Sep el_s_sep @
    syl6bb (bian1a @ eex @ eex @ anwr heap_join_isf3) @ syl aneq2a @ exp @
    syl6bbr (exeqi @ exeqi @ aneq1a @ aneqd
      (syl5bb el_s_Sep @ syl bian1 heap_join_isf1)
      (syl5bb el_s_Sep @ syl bian1 heap_join_isf2)) @ ibid _ _)
  (focus
    (def (f x) '(!! iexde ,(dummy! 'nat) @
      sylbir (aneq2i @ eqlower2 @ infin1 finns) @ mpbird (anwr ,eqtac) @ anwl @
      iand (s_Sep_un_lem2 ,x anrl) @ sylbir anass @ imp @
      alimd @ syl5 (imim1i @ ssel ,x) @ a2d @ exp @ bi2d @
      eleq1d @ lowereqd @ s_Sep_un_lem3 ,x anlr anr))
    '(eexda @ !! iexde f @ !! iexde g @
      sylbir (aneq (aneq2i @ eqlower2 @ resfin finns) (eqlower2 @ resfin finns)) @
      sylibr (aneq2i heap_join_S) @ mpbird (rsyl (anim1 anr) ,eqtac) @ anwll @
      iand (iand ,(f 'ssun1) ,(f 'ssun2)) _)
    (have 'h1 '(syl5eqsr indi @ sylib eqin1 @ sylib (sseq2 xpundir) @
      sylib ssrn funcrn))
    '(mpbird (rsyl anrl @
        syl heap_join_res @ syl5eqsr dmun @ eqstrd (dmeqd h1) funcdm) @
      iand anlr @ mpbird (syl dmdisj @ rsyl anrl @ mpbird (isfeqd h1) funcisf) @
      syl5eqsr inindi @ syl (sseq0 inss2) @ eqstr3g xpindir xp02 @ xpeq2d anll))
  (focus
    (have 'h2
      '(mpbid (funceq2d @ anwr heap_join_dmun) @ unfunc (anwr heap_join_dmin)
        (syl (funcss3 ssun1) @ anld anllr) (syl (funcss3 ssun2) @ anld anlr)))
    '(eexd @ eexd @ impd @ impd @ eexda @ eexda @ exp @ !! iexde h @
      mpbird (rsyl (sylibr (eqlower2 @ unfin finns finns) anr) ,eqtac) @ anwl @
      iand h2 @ sylibr (aleqi @ bitr (imeq1i elun) imor) @ sylibr alan _)
    (have 'h3 $ _ -> x e. A -> ~x e. B $
      '(sylib notan2 @ mpbiri el02 @ noteqd @ syl5bbr elin @ eleq2d an4l))
    (have 'h4 $ _ -> z e. Dom f -> ~z e. Dom g $
      '(sylib notan2 @ mpbiri el02 @ noteqd @ syl5bbr elin @ eleq2d @ rsyl anlr heap_join_dmin))
    (def (f x y z u v)
      '(rsyl (iand (anim1 @ anim (anim anl anl) anl) h2) @
        aleqd @ syl imeq2a @ exp @ eleq1d @ lowereqd @
        !! s_Sep_un_lem4 p z v anlr ,x @
        bitrd (anwl @ aneqd (bitr3d (eleq2d @ syl heap_join_un anlr) (a1i elun)) (a1i elun)) @
        bitrd (aneq2d @ syl ,z @ mtd (imp ,u) @
          syl5 prelrn @ syl ssel @ syl funcrn ,y) @
        syl aneq1a @ exp @ syl ,z @ mtd (imp @ syl5 preldm @
          mpbird (imeq1d @ eleq2d @ syl funcdm ,x) (anwl ,v)) @
        a1i preldm))
    '(iand
      (mpbird ,(f 'an4lr 'an3lr 'bior2 'h3 'h4) (anrd anllr))
      (mpbird ,(f 'an3lr 'an4lr 'bior1 '(con2d h3) '(con2d h4)) (anrd anlr)))));

theorem s_Sep_ins (P: set x)
  (e: $ G /\ x = a -> P == Q $)
  (h: $ G -> Q C_ T.s $)
  (h2: $ G -> ~a e. b $):
  $ G -> |*|s x e. a ; b, P == Q *s |*|s x e. b, P $ =
'(syl5eqs (s_Sepeq1 insunsn) @ eqstrd (syl s_Sep_un @ sylibr sndisj h2) @
  s_sepeq1d @ s_Sep_sn e h);

theorem s_Sep_bij_lem (a: nat y) (b: nat x) (P: set x) (Q: set y)
  (h1: $ G /\ x e. A -> b e. B $)
  (h2: $ G /\ y e. B -> a e. A $)
  (h3: $ G /\ x e. A /\ y e. B -> (x = a <-> y = b) $)
  (h4: $ G /\ y e. B /\ x = a -> P == Q $):
  $ G -> |*|s x e. A, P C_ |*|s y e. B, Q $ =
(named @ focus
  '(iald @ sylibr (imeqi el_s_Sep el_s_Sep) @ syl anim2a @ exp @
    eexda @ sylan (!! iexe f ,eqtac) _ _)
  (focus
    '(sylibr (rlamfunc2 @ mpbi eqlower @ dmfin finns) @ ialda @
      sylc _ (anw3l @ ialda h1) @ syl funcT @ anim1 anrl)
    '(ealeh (nfim nfv @ nfel nfsbn1 nfsv) @ imeqd eleq1 @ eleq1d sbnq))
  (focus
    '(iald @ sylbir anass @ imp @ com23 @ exp @
      ealdeh nfv (nfel (nflower @ nfres nfsv @ nfab @
        nf_eq (nfapp (nfns @ nfrlam nfnv nfsbn1) nfnv) nfnv) nfsv) @
      eimd (mpbird (eleq1d anr) @ sylan h2 an4l anlr) @
      bi1d @ eleqd _ @ sylan h4 (iand an4l anlr) anr)
    '(lowereqd @ eqstr3g (reseq1 resdm) (reseq1 resdm) @
      eqstr4g resres resres @ reseq2d @ sylib abeqb @ iald @
      syl aneq2a @ exp @ bitr4g (elabe ,eqtac) (elabe ,eqtac) @
      bitrd (eqeq2d anlr) @ bitr4d (syl6bb eqcomb _) @
      eqeq1d @ syl (apprlame ,eqtac) @ sylibr (ellower @ dmfin finns) anr)
    '(sylan _ (iand an5l @ sylan funcT an3lr anr) anllr)
    '(!! sbethh x (nfim nfv @ nfbi nfv @ nfeq2 nfsbn1) h3 @
      imeqd ,eqtac @ bieqd eqeq1 @ eqeq2d sbnq)));

theorem s_Sep_bij (a: nat y) (b: nat x) (P: set x) (Q: set y)
  (h1: $ G /\ x e. A -> b e. B $)
  (h2: $ G /\ y e. B -> a e. A $)
  (h3: $ G /\ x e. A /\ y e. B -> (x = a <-> y = b) $)
  (h4: $ G /\ y e. B /\ x = a -> P == Q $):
  $ G -> |*|s x e. A, P == |*|s y e. B, Q $ =
'(ssasymd (s_Sep_bij_lem h1 h2 h3 h4) @
  s_Sep_bij_lem h2 h1 (bicomd @ sylbi anrass h3) @
  eqscomd @ mpand (mpbird (eleq1d anr) @ anwl h1) @
  sylan h4 (iand an3l anr) @ mpbird (syl h3 @ anim1 anl) anlr);

theorem s_Sep_uptoS2 (P: set x)
  (e: $ G /\ x = n -> P == Q $)
  (h: $ G -> Q C_ T.s $):
  $ G -> |*|s x e. upto (suc n), P == |*|s x e. upto n, P *s Q $ =
'(eqstr4g (s_Sepeq1 @ nseq uptoS_ins) s_sepcom @
  s_Sep_ins e h @ a1i @ mtbir elupto ltirr);

theorem s_Sep_uptoA (P: set x) (Q: set y)
  (e: $ G /\ x = m + y -> P == Q $):
  $ G -> |*|s x e. upto (m + n), P ==
         |*|s x e. upto m, P *s |*|s y e. upto n, Q $ =
(focus
  '(syl5eqs (s_Sepeq1 @ eqstr2 unincpl @ mpbi equn1 @ mpbir uptoss leaddid1) @
    syl5eqs (s_Sep_un inincpl) @ s_sepeq2d _)
  (def h1 '(bitr elin @ aneq elupto @ bitr elcpl @ bitr4 (noteq elupto) lenlt))
  '(s_Sep_bij
    (anwr @ sylbi ,h1 @ sylibr elupto @ mpbird (anwr ltsubadd2) anl)
    (anwr @ sylbi elupto @ sylibr ,h1 @ iand (bi1i ltadd2) @ a1i leaddid1)
    (bitr4g eqcomb eqcomb @ bicomd @ syl subadd @ anrd @ sylib ,h1 anlr)
    (syl e @ anim1 anl)));

theorem s_Sep_uptoS (P: set x) (P1: set y)
  (e0: $ G /\ x = 0 -> P == P0 $)
  (e1: $ G /\ x = suc y -> P == P1 $)
  (h: $ G -> P0 C_ T.s $):
  $ G -> |*|s x e. upto (suc n), P == P0 *s |*|s y e. upto n, P1 $ =
'(syl5eqsr (s_Sepeq1 @ nseq @ uptoeq add11) @
  eqstrd (s_Sep_uptoA @ sylbi (aneq2i @ eqeq2 add11) e1) @
  s_sepeq1d @ syl5eqs (s_Sepeq1 @ nseq upto1_sn) @ s_Sep_sn e0 h);

theorem s_Sep_subsn_lem (P: set x) (G: wff x y)
  (h1: $ G -> A. x (x e. A -> subsn P) $)
  (h2: $ G -> func F1 (Dom H1) A $)
  (h3: $ G -> A. x (x e. A -> lower (ns H1 |` {y | F1 @ y = x}) e. P) $)
  (h4: $ G -> A. x (x e. A -> lower (ns H2 |` {y | F2 @ y = x}) e. P) $)
  (h5: $ G -> a, b e. H1 $): $ G -> a, b e. H2 $ =
(named @ focus
  (have 'a1 '(sylc _
    (rsyl (sylibr ralan @ iand (sylibr ralan @ iand h1 h3) h4) @
      alimi @ imim2i @
      sylibr (lowerinj (resfin finns) (resfin finns)) @ subsni anll anlr anr)
    (sylan funcT h2 @ syl preldm h5)))
  (focus '(eale ,eqtac))
  '(anld @ sylib prelres @ mpbid (eleq2d a1) @
    sylibr prelres @ iand h5 @ sylibr (elabe ,eqtac) eqidd));

theorem s_Sep_subsn (P: set x): $ A. x (x e. A -> subsn P) -> subsn (|*|s x e. A, P) $ =
(named @ focus
  (def (f x y) '(s_Sep_subsn_lem an3l (anld ,x) (anrd ,x) (anrd ,y) anr))
  '(iald @ iald @ syl5bi el_s_Sep @ syl5 anr @ eexda @
  syl5bi el_s_Sep @ syl5 anr @ eexda @
  syl axext @ sylibr axext2 @ iald @ iald @ ibida ,(f 'anllr 'anlr) ,(f  'anlr 'anllr)));

theorem s_Sep_ss (P Q: set x): $ A. x (x e. A -> P C_ Q) -> |*|s x e. A, P C_ |*|s x e. A, Q $ =
(named '(iald @ sylibr (imeqi el_s_Sep el_s_Sep) @
  anim2d @ eximd @ anim2d @ al2imi @ a2d @ imim2i ssel));

@_ local def s_weak (P Q: set): wff = $ P /\s T.s C_ Q *s T.s $;
infixr s_weak: $=>*s$ prec 51;
theorem s_weak_sstop: $ P C_ T.s -> (P =>*s Q <-> P C_ Q *s T.s) $ = '(sylbi s_antop sseq1);
theorem s_weak_sstop1: $ P C_ Q *s T.s -> P =>*s Q $ =
'(mpbird (syl s_weak_sstop @ mpi s_sep_sstop sstr) id);
theorem s_weak_septop: $ P =>*s Q <-> P *s T.s C_ Q *s T.s $ =
'(bitr (ibii (sylib (sseq2 s_septop2) s_sepim1) @
    sstr @ mpbi (sseq1 s_antop2) s_ssseptop) (sseq1 s_sep_antop1));
theorem s_weak_iff: $ P =>*s Q <-> A. p (p e. P /\ isfun p -> E. q (q e. Q /\ q C_ p)) $ =
(named '(aleqi @ bitr (imeq1i @ bitr el_s_antop ancomb) @
  imeq2a @ syl5bb el_s_sep2 @ rexeqd @
  syl5bb (exeqi @ bian1a heap_join_sstop2) @ syl5bb heap_join_ex2 @ anwr bian1));
theorem s_weak_antop1: $ P /\s T.s =>*s Q <-> P =>*s Q $ = '(sseq1 s_antop2);
theorem s_weak_antop2: $ P =>*s Q /\s T.s <-> P =>*s Q $ = '(sseq2 s_sep_antop1);

theorem ss_s_weak: $ P C_ Q -> P =>*s Q $ =
(named '(sylibr s_weak_iff @ iald @
  syl5 anl @ syl6 (mpand (a1i ssid) @ iexe ,eqtac) ssel));
theorem s_weak_id: $ P =>*s P $ = '(ss_s_weak ssid);

theorem s_sep_weak2: $ P =>*s Q -> R *s P =>*s R *s Q $ =
'(sylibr (s_weak_sstop s_sep_sstop) @
  sylib (sseq s_sep_antop2 @ eqscom s_sepass) s_sepim2);
theorem s_sep_weak1: $ P =>*s Q -> P *s R =>*s Q *s R $ =
'(sylib (s_weakeq s_sepcom s_sepcom) s_sep_weak2);

theorem s_sepl: $ P *s Q =>*s P $ =
'(mpbir (s_weak_sstop s_sep_sstop) @ mpbi (sseq1 s_sep_antop2) @ s_sepim2 s_anr);
theorem s_sepr: $ P *s Q =>*s Q $ = '(mpbi (s_weakeq1 s_sepcom) s_sepl);
theorem s_weak_anl: $ P /\s Q =>*s P $ = '(ss_s_weak s_anl);
theorem s_weak_anr: $ P /\s Q =>*s Q $ = '(ss_s_weak s_anr);
theorem s_weak_orl: $ P =>*s P \/s Q $ = '(ss_s_weak s_orl);
theorem s_weak_orr: $ Q =>*s P \/s Q $ = '(ss_s_weak s_orr);

theorem s_weak_tr: $ P =>*s Q -> Q =>*s R -> P =>*s R $ = '(syl5bi s_weak_septop sstr);

theorem s_sepwl: $ P =>*s R -> P *s Q =>*s R $ = '(s_weak_tr s_sepl);
theorem s_sepwr: $ Q =>*s R -> P *s Q =>*s R $ = '(s_weak_tr s_sepr);
theorem s_weak_anwl: $ P =>*s R -> P /\s Q =>*s R $ = '(s_weak_tr s_weak_anl);
theorem s_weak_anwr: $ Q =>*s R -> P /\s Q =>*s R $ = '(s_weak_tr s_weak_anr);
theorem s_weak_orld: $ G =>*s P -> G =>*s P \/s Q $ = '(mpi s_weak_orl s_weak_tr);
theorem s_weak_orrd: $ G =>*s Q -> G =>*s P \/s Q $ = '(mpi s_weak_orr s_weak_tr);

theorem s_weakor: $ P \/s Q =>*s R <-> P =>*s R /\ Q =>*s R $ =
'(bitr (sseq1 s_andir) s_eorb);
theorem s_or_weak1: $ P =>*s Q -> P \/s R =>*s Q \/s R $ =
'(sylibr s_weakor @ iand s_weak_orld @ a1i s_weak_orr);
theorem s_or_weak2: $ P =>*s Q -> R \/s P =>*s R \/s Q $ =
'(sylibr s_weakor @ iand (a1i s_weak_orl) s_weak_orrd);
theorem s_weak_orsep1: $ P *s (Q \/s R) =>*s Q \/s (P *s R) $ =
'(mpbir (s_weakeq1 s_orsepdir) @ s_or_weak1 s_sepr);

theorem s_weak_split (h1: $ G -> subsn Q $) (hA: $ G -> A C_ T.s $)
  (hP: $ G -> A C_ P $) (hQ: $ G -> A =>*s Q $): $ G -> A C_ Q *s (Q -*s P) $ =
'(sylc sstr (sylibr s_ian @
    iand (mpbid (syl s_weak_sstop hA) hQ) hP) @ syl s_split h1);

theorem s_lift_weak_elift: $ ^s p =>*s ^e p $ = '(eqss @ eqstr4 s_lift_antop s_elift_septop);
theorem s_lift_weak: $ ^s p =>*s ^s q <-> (p -> q) $ =
'(bitr (sseq s_lift_antop s_lift_septop) s_lift_ss);
theorem s_elift_weak: $ ^e p =>*s ^e q <-> (p -> q) $ =
'(bitr (sseq s_elift_antop s_elift_septop) s_elift_ss_lift2);

theorem s_weak_bot1: $ F.s =>*s P $ = '(mpbir (sseq1 s_bot_an1) s_bot_ss1);
theorem s_weak_bot2: $ P =>*s F.s <-> P /\s T.s == F.s $ = '(bitr (sseq2 s_bot_sep1) s_bot_ss2);
theorem s_weak_emp2: $ P =>*s emp $ = '(mpbir (sseq2 @ mpbi s_sep_emp1 ssid) @ s_anr);
theorem s_weak_top2: $ P =>*s T.s $ = '(mpbir (sseq2 s_top_sepidm) s_anr);

theorem s_Sep_weak (P: set x): $ A C_ B -> |*|s x e. B, P =>*s |*|s x e. A, P $ =
'(mpbii s_sepl @ s_weakeq1d @
  syl5eqsr (s_Sep_un inincpl) @ s_Sepeq1d @ syl5eqs unincpl @ bi1 equn1);

theorem s_Sep_weak1 (P: set x)
  (e: $ G /\ x = a -> P == Q $) (h: $ G -> a e. A $): $ G -> |*|s x e. A, P =>*s Q $ =
'(sylib s_weak_antop2 @
  mpbid (s_weakeq2d @ syl5eqsr s_Sep_antop @ s_Sep_sn (s_aneq1d e) @ a1i s_anr) @
  syl s_Sep_weak @ sylibr snss h);
